/*
 * This file is generated by jOOQ.
 */
package med_db.jooq.generated;


import med_db.jooq.generated.tables.Assegnazioneletto;
import med_db.jooq.generated.tables.Degente;
import med_db.jooq.generated.tables.Diariainf;
import med_db.jooq.generated.tables.Diariamed;
import med_db.jooq.generated.tables.Letto;
import med_db.jooq.generated.tables.Modulo;
import med_db.jooq.generated.tables.Personale;
import med_db.jooq.generated.tables.Reparto;
import med_db.jooq.generated.tables.Rilevazione;
import med_db.jooq.generated.tables.records.AssegnazionelettoRecord;
import med_db.jooq.generated.tables.records.DegenteRecord;
import med_db.jooq.generated.tables.records.DiariainfRecord;
import med_db.jooq.generated.tables.records.DiariamedRecord;
import med_db.jooq.generated.tables.records.LettoRecord;
import med_db.jooq.generated.tables.records.ModuloRecord;
import med_db.jooq.generated.tables.records.PersonaleRecord;
import med_db.jooq.generated.tables.records.RepartoRecord;
import med_db.jooq.generated.tables.records.RilevazioneRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AssegnazionelettoRecord> ASSEGNAZIONELETTO__PK_ASSEGNAZIONELETTO = Internal.createUniqueKey(Assegnazioneletto.ASSEGNAZIONELETTO, DSL.name("pk_ASSEGNAZIONELETTO"), new TableField[] { Assegnazioneletto.ASSEGNAZIONELETTO.CODICE_REPARTO, Assegnazioneletto.ASSEGNAZIONELETTO.CODICE_DEGENTE, Assegnazioneletto.ASSEGNAZIONELETTO.NOME_MODULO, Assegnazioneletto.ASSEGNAZIONELETTO.NUMERO_LETTO }, true);
    public static final UniqueKey<DegenteRecord> DEGENTE__PK_DEGENTE = Internal.createUniqueKey(Degente.DEGENTE, DSL.name("pk_DEGENTE"), new TableField[] { Degente.DEGENTE.CODICE }, true);
    public static final UniqueKey<DiariainfRecord> DIARIAINF__PK_DIARIAINF = Internal.createUniqueKey(Diariainf.DIARIAINF, DSL.name("pk_DIARIAINF"), new TableField[] { Diariainf.DIARIAINF.CODICE, Diariainf.DIARIAINF.CODICE_DEGENTE }, true);
    public static final UniqueKey<DiariamedRecord> DIARIAMED__PK_DIARIAMED = Internal.createUniqueKey(Diariamed.DIARIAMED, DSL.name("pk_DIARIAMED"), new TableField[] { Diariamed.DIARIAMED.CODICE, Diariamed.DIARIAMED.CODICE_DEGENTE }, true);
    public static final UniqueKey<LettoRecord> LETTO__PK_LETTO = Internal.createUniqueKey(Letto.LETTO, DSL.name("pk_LETTO"), new TableField[] { Letto.LETTO.CODICE_REPARTO, Letto.LETTO.NOME_MODULO, Letto.LETTO.NUMERO }, true);
    public static final UniqueKey<ModuloRecord> MODULO__PK_MODULO = Internal.createUniqueKey(Modulo.MODULO, DSL.name("pk_MODULO"), new TableField[] { Modulo.MODULO.CODICE_REPARTO, Modulo.MODULO.NOME }, true);
    public static final UniqueKey<PersonaleRecord> PERSONALE__PK_PERSONALE = Internal.createUniqueKey(Personale.PERSONALE, DSL.name("pk_PERSONALE"), new TableField[] { Personale.PERSONALE.CODICE, Personale.PERSONALE.PASSWORD }, true);
    public static final UniqueKey<RepartoRecord> REPARTO__PK_REPARTO = Internal.createUniqueKey(Reparto.REPARTO, DSL.name("pk_REPARTO"), new TableField[] { Reparto.REPARTO.CODICE }, true);
    public static final UniqueKey<RilevazioneRecord> RILEVAZIONE__PK_RILEVAZIONE = Internal.createUniqueKey(Rilevazione.RILEVAZIONE, DSL.name("pk_RILEVAZIONE"), new TableField[] { Rilevazione.RILEVAZIONE.ID, Rilevazione.RILEVAZIONE.CODICE_DEGENTE }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AssegnazionelettoRecord, DegenteRecord> ASSEGNAZIONELETTO__FK_ASSEGNAZIONELETTO_PK_DEGENTE = Internal.createForeignKey(Assegnazioneletto.ASSEGNAZIONELETTO, DSL.name("fk_ASSEGNAZIONELETTO_pk_DEGENTE"), new TableField[] { Assegnazioneletto.ASSEGNAZIONELETTO.CODICE_DEGENTE }, Keys.DEGENTE__PK_DEGENTE, new TableField[] { Degente.DEGENTE.CODICE }, true);
    public static final ForeignKey<AssegnazionelettoRecord, LettoRecord> ASSEGNAZIONELETTO__FK_ASSEGNAZIONELETTO_PK_LETTO = Internal.createForeignKey(Assegnazioneletto.ASSEGNAZIONELETTO, DSL.name("fk_ASSEGNAZIONELETTO_pk_LETTO"), new TableField[] { Assegnazioneletto.ASSEGNAZIONELETTO.NUMERO_LETTO, Assegnazioneletto.ASSEGNAZIONELETTO.NOME_MODULO, Assegnazioneletto.ASSEGNAZIONELETTO.CODICE_REPARTO }, Keys.LETTO__PK_LETTO, new TableField[] { Letto.LETTO.NUMERO, Letto.LETTO.NOME_MODULO, Letto.LETTO.CODICE_REPARTO }, true);
    public static final ForeignKey<DiariainfRecord, DegenteRecord> DIARIAINF__FK_DIARIAINF_PK_DEGENTE = Internal.createForeignKey(Diariainf.DIARIAINF, DSL.name("fk_DIARIAINF_pk_DEGENTE"), new TableField[] { Diariainf.DIARIAINF.CODICE_DEGENTE }, Keys.DEGENTE__PK_DEGENTE, new TableField[] { Degente.DEGENTE.CODICE }, true);
    public static final ForeignKey<DiariamedRecord, DegenteRecord> DIARIAMED__FK_DIARIAMED_PK_DEGENTE = Internal.createForeignKey(Diariamed.DIARIAMED, DSL.name("fk_DIARIAMED_pk_DEGENTE"), new TableField[] { Diariamed.DIARIAMED.CODICE_DEGENTE }, Keys.DEGENTE__PK_DEGENTE, new TableField[] { Degente.DEGENTE.CODICE }, true);
    public static final ForeignKey<LettoRecord, RepartoRecord> LETTO__FK_LETTO_PK_REPARTO = Internal.createForeignKey(Letto.LETTO, DSL.name("fk_LETTO_pk_REPARTO"), new TableField[] { Letto.LETTO.CODICE_REPARTO }, Keys.REPARTO__PK_REPARTO, new TableField[] { Reparto.REPARTO.CODICE }, true);
    public static final ForeignKey<ModuloRecord, RepartoRecord> MODULO__FK_MODULO_PK_REPARTO = Internal.createForeignKey(Modulo.MODULO, DSL.name("fk_MODULO_pk_REPARTO"), new TableField[] { Modulo.MODULO.CODICE_REPARTO }, Keys.REPARTO__PK_REPARTO, new TableField[] { Reparto.REPARTO.CODICE }, true);
    public static final ForeignKey<RilevazioneRecord, DegenteRecord> RILEVAZIONE__FK_RILEVAZIONE_PK_DEGENTE = Internal.createForeignKey(Rilevazione.RILEVAZIONE, DSL.name("fk_RILEVAZIONE_pk_DEGENTE"), new TableField[] { Rilevazione.RILEVAZIONE.CODICE_DEGENTE }, Keys.DEGENTE__PK_DEGENTE, new TableField[] { Degente.DEGENTE.CODICE }, true);
}
